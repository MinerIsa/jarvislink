{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/Jarvis Link Web - Public/src/pages/CryptoTwo/ReviewSlider.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport crypto1 from '../../assets/images/crypto/1.jpg';\nimport crypto2 from '../../assets/images/crypto/2.jpg';\nimport crypto3 from '../../assets/images/crypto/3.jpg';\nimport crypto4 from '../../assets/images/crypto/4.jpg';\nimport crypto5 from '../../assets/images/crypto/5.jpg';\nimport crypto6 from '../../assets/images/crypto/6.jpg';\nimport crypto7 from '../../assets/images/crypto/7.jpg';\nimport crypto8 from '../../assets/images/crypto/8.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ReviewsSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.updateWindowSize = () => {\n      if (window.outerWidth >= 1230) {\n        this.setState({\n          itemCount: 4,\n          cols: 3\n        });\n      } else if (window.outerWidth >= 970 && window.outerWidth < 1230) {\n        this.setState({\n          itemCount: 2,\n          cols: 6\n        });\n      } else if (window.outerWidth <= 970) {\n        this.setState({\n          itemCount: 1,\n          cols: 12\n        });\n      }\n    };\n    this.state = {\n      cols: 4,\n      step1: true,\n      step2: false,\n      review: [{\n        id: 1,\n        img: crypto1\n      }, {\n        id: 2,\n        img: crypto2\n      }, {\n        id: 3,\n        img: crypto3\n      }, {\n        id: 4,\n        img: crypto4\n      }, {\n        id: 5,\n        img: crypto5\n      }, {\n        id: 6,\n        img: crypto6\n      }, {\n        id: 7,\n        img: crypto7\n      }, {\n        id: 8,\n        img: crypto8\n      }]\n    };\n    this.updateWindowSize.bind(this);\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowSize);\n    this.updateWindowSize();\n  }\n\n  // Make sure to remove the DOM listener when the component is unmounted.\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowSize);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mt-5 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"customer-testi\",\n                className: \"tiny-four-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tiny-slide\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: this.state.step1 === true ? this.state.review.map((review, key) => key >= 0 && key <= 3 ? /*#__PURE__*/_jsxDEV(Col, {\n                      md: this.state.cols,\n                      className: \"mb-1\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"customer-testi\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: review.img,\n                          className: \"img-fluid rounded shadow\",\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 61\n                      }, this)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 57\n                    }, this) : null) : this.state.review.map((review, key) => key >= 4 && key <= 8 ? /*#__PURE__*/_jsxDEV(Col, {\n                      md: this.state.cols,\n                      className: \"mb-1\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"customer-testi\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: review.img,\n                          className: \"img-fluid rounded shadow\",\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 61\n                      }, this)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 57\n                    }, this) : null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tns-nav\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    this.setState({\n                      step1: true,\n                      step2: false\n                    });\n                  },\n                  className: this.state.step1 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    this.setState({\n                      step1: false,\n                      step2: true\n                    });\n                  },\n                  className: this.state.step2 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ReviewsSlider;","map":{"version":3,"names":["React","Component","Link","Row","Col","Container","crypto1","crypto2","crypto3","crypto4","crypto5","crypto6","crypto7","crypto8","ReviewsSlider","constructor","props","updateWindowSize","window","outerWidth","setState","itemCount","cols","state","step1","step2","review","id","img","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","map","key"],"sources":["/Users/abc/Desktop/Jarvis Link Web - Public/src/pages/CryptoTwo/ReviewSlider.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container } from \"reactstrap\";\n\nimport crypto1 from '../../assets/images/crypto/1.jpg';\nimport crypto2 from '../../assets/images/crypto/2.jpg';\nimport crypto3 from '../../assets/images/crypto/3.jpg';\nimport crypto4 from '../../assets/images/crypto/4.jpg';\nimport crypto5 from '../../assets/images/crypto/5.jpg';\nimport crypto6 from '../../assets/images/crypto/6.jpg';\nimport crypto7 from '../../assets/images/crypto/7.jpg';\nimport crypto8 from '../../assets/images/crypto/8.jpg';\n\nclass ReviewsSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cols: 4,\n            step1: true,\n            step2: false,\n            review: [\n                {\n                    id: 1,\n                    img: crypto1\n                },\n                {\n                    id: 2,\n                    img: crypto2\n                },\n                {\n                    id: 3,\n                    img: crypto3\n                },\n                {\n                    id: 4,\n                    img: crypto4\n                },\n                {\n                    id: 5,\n                    img: crypto5\n                },\n                {\n                    id: 6,\n                    img: crypto6\n                },\n                {\n                    id: 7,\n                    img: crypto7\n                },\n                {\n                    id: 8,\n                    img: crypto8\n                },\n            ]\n        };\n        this.updateWindowSize.bind(this);\n    }\n\n    updateWindowSize = () => {\n        if (window.outerWidth >= 1230) {\n            this.setState({ itemCount: 4, cols: 3 });\n        } else if (window.outerWidth >= 970 && window.outerWidth < 1230) {\n            this.setState({ itemCount: 2, cols: 6 });\n        } else if (window.outerWidth <= 970) {\n            this.setState({ itemCount: 1, cols: 12 });\n        }\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowSize);\n        this.updateWindowSize();\n    }\n\n    // Make sure to remove the DOM listener when the component is unmounted.\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowSize);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"mt-5 pt-4\">\n                    <Container>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div\n                                    id=\"customer-testi\"\n                                    className=\"tiny-four-item\"\n                                >\n                                    <div className=\"tiny-slide\">\n                                        <Row>\n                                            {this.state.step1 === true\n                                                ? this.state.review.map((review, key) =>\n                                                    key >= 0 && key <= 3 ? (\n                                                        <Col\n                                                            key={key}\n                                                            md={this.state.cols}\n                                                            className=\"mb-1\"\n                                                        >\n                                                            <Link to=\"#\" className=\"customer-testi\">\n                                                                <img src={review.img} className=\"img-fluid rounded shadow\" alt=\"\" />\n                                                            </Link>\n                                                        </Col>\n                                                    ) : null\n                                                )\n                                                : this.state.review.map((review, key) =>\n                                                    key >= 4 && key <= 8 ? (\n                                                        <Col\n                                                            key={key}\n                                                            md={this.state.cols}\n                                                            className=\"mb-1\"\n                                                        >\n                                                            <Link to=\"#\" className=\"customer-testi\">\n                                                                <img src={review.img} className=\"img-fluid rounded shadow\" alt=\"\" />\n                                                            </Link>\n                                                        </Col>\n                                                    ) : null\n                                                )}\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className=\"tns-nav\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            this.setState({ step1: true, step2: false });\n                                        }}\n                                        className={\n                                            this.state.step1 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                                        }\n                                    ></button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            this.setState({ step1: false, step2: true });\n                                        }}\n                                        className={\n                                            this.state.step2 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                                        }\n                                    ></button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ReviewsSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}